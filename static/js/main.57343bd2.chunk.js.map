{"version":3,"sources":["actions/index.js","components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetails.js","components/App.js","reducers/index.js","reducers/data.js","index.js"],"names":["Videos","videos","type","payload","selectedVideo","video","SearchBar","renderInput","input","onSubmit","Input","onInputSubmit","this","term","YTSearch","key","props","defaultVideo","handleSubmit","Field","name","component","Component","formWrapped","reduxForm","form","connect","state","console","log","imageUrl","snippet","thumbnails","default","url","title","onClick","src","alt","VideoList","renderVideoList","map","etag","Video","videoId","id","description","App","combineReducers","formReducer","action","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDom","render","document","querySelector"],"mappings":"6OAAaA,EAAS,SAACC,GAAD,MAAa,CACjCC,KAAM,cACNC,QAASF,IAQEG,EAAgB,SAACC,GAAD,MAAY,CACvCH,KAAM,iBACNC,QAASE,ICJLC,E,4MAcJC,YAAc,YAAgB,IAAbC,EAAY,EAAZA,MAEf,OAAO,0BAAWA,I,EAGpBC,SAAW,YAAgB,IAAbC,EAAY,EAAZA,MACZ,EAAKC,cAAcD,I,kEAlBnBE,KAAKD,cAAc,iC,oCAIPE,GAAO,IAAD,OAClBC,IAAS,CAAEC,IATC,0CASaF,KAAMA,IAAQ,SAACZ,GACtC,EAAKe,MAAMhB,OAAOC,GAClB,IAAMgB,EAAe,EAAKD,MAAMf,OAAO,GACvC,EAAKe,MAAMZ,cAAca,Q,+BAe3B,OACE,6BACE,0BAAMR,SAAUG,KAAKI,MAAME,aAAaN,KAAKH,WAC3C,kBAACU,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWT,KAAKL,cACpC,gD,GA7Bce,aAqClBC,EAAcC,YAAU,CAC5BC,KAAM,cADYD,CAEjBlB,GAOYoB,eALS,SAACC,GAEvB,MAAO,CAAE1B,OAAQ0B,EAAM1B,UAGe,CAAED,SAAQI,iBAAnCsB,CAAoDH,GCrBpDG,kBAAQ,KAAM,CAAEtB,iBAAhBsB,EA7Bf,YAA8C,IAAzBrB,EAAwB,EAAxBA,MAAOD,EAAiB,EAAjBA,cAC1BwB,QAAQC,IAAIxB,GACZuB,QAAQC,IAAIzB,GAEZ,IAAM0B,EAAWzB,EAAM0B,QAAQC,WAAWC,QAAQC,IAC5CC,EAAQ9B,EAAM0B,QAAQI,MAG5B,OACE,6BACE,yBACEC,QAAS,WACPhC,EAAcC,KAGhB,yBAAKgC,IAAKP,EAAUQ,IAAI,qBAG1B,6BACE,6BAAMH,QClBRI,E,4MACJC,gBAAkB,WAChB,OAAO,EAAKxB,MAAMf,OAAOwC,KAAI,SAACpC,GAC5B,OAAO,kBAAC,EAAD,CAAWU,IAAKV,EAAMqC,KAAMrC,MAAOA,Q,uDAM5C,OAAO,6BAAMO,KAAK4B,uB,GATElB,aAkBTI,eALS,SAACC,GAEvB,MAAO,CAAE1B,OAAQ0B,EAAM1B,UAGe,CAAED,UAA3B0B,CAAqCa,GCGpD,IAKeb,eALS,SAACC,GAEvB,MAAO,CAAEgB,MAAOhB,EAAMvB,iBAGgB,CAAEJ,SAAQI,iBAAnCsB,EA3Bf,YAAkC,IAAViB,EAAS,EAATA,MACtB,IAAKA,EACH,OAAO,2CAGT,IAAMC,EAAUD,EAAME,GAAGD,QACnBV,EAAG,wCAAoCU,GAG7C,OADAhB,QAAQC,IAAIc,GAEV,6BACE,6BACE,4BAAQR,MAAM,UAAUE,IAAKH,KAE/B,6BACE,6BAAMS,EAAMZ,QAAQI,OACpB,6BAAMQ,EAAMZ,QAAQe,kBCFbC,EAbf,uKAEI,OACE,6BAEE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WAPR,GAAyBzB,a,SCDV0B,cAAgB,CAC7BvB,KAAMwB,IACNhD,OCGoB,WAAyB,IAAxB0B,EAAuB,uDAAf,GAAIuB,EAAW,uCAC5C,OAAQA,EAAOhD,MACb,IAAK,cACH,OAAOgD,EAAO/C,QAChB,QACE,OAAOwB,IDPXvB,cCP2B,WAA2B,IAA1BuB,EAAyB,uDAAjB,KAAMuB,EAAW,uCACrD,OAAQA,EAAOhD,MACb,IAAK,iBACH,OAAOgD,EAAO/C,QAChB,QACE,OAAOwB,MCGPwB,EAAQC,YACZC,EACAC,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,W","file":"static/js/main.57343bd2.chunk.js","sourcesContent":["export const Videos = (videos) => ({\r\n  type: \"VIDEOS_LIST\",\r\n  payload: videos,\r\n});\r\n\r\n// export const currentVideo = (video) => ({\r\n//   type: \"CURRENT_VIDEO\",\r\n//   payload: video,\r\n// });\r\n\r\nexport const selectedVideo = (video) => ({\r\n  type: \"SELECTED_VIDEO\",\r\n  payload: video,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport YTSearch from \"youtube-api-search\";\r\nimport { Videos, selectedVideo } from \"../actions\";\r\n\r\nconst API_KEY = \"AIzaSyAM0PMymJsVy-jVLtkuswdUlYTp7EQ3GVk\";\r\n\r\nclass SearchBar extends Component {\r\n  componentDidMount() {\r\n    this.onInputSubmit(\"Tariq Mohammad Surah Yousuf\");\r\n  }\r\n\r\n  // Api Call to youtube\r\n  onInputSubmit(term) {\r\n    YTSearch({ key: API_KEY, term: term }, (videos) => {\r\n      this.props.Videos(videos);\r\n      const defaultVideo = this.props.videos[0];\r\n      this.props.selectedVideo(defaultVideo);\r\n    });\r\n  }\r\n\r\n  renderInput = ({ input }) => {\r\n    // console.log(input);\r\n    return <input {...input} />;\r\n  };\r\n\r\n  onSubmit = ({ Input }) => {\r\n    this.onInputSubmit(Input);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n          <Field name=\"Input\" component={this.renderInput} />\r\n          <button>Search</button>\r\n        </form>\r\n        {/* {this.props.videos.length} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst formWrapped = reduxForm({\r\n  form: \"SearchTerm\",\r\n})(SearchBar);\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return { videos: state.videos };\r\n};\r\n\r\nexport default connect(mapStateToProps, { Videos, selectedVideo })(formWrapped);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectedVideo } from \"../actions\";\r\n\r\nfunction VideoItem({ video, selectedVideo }) {\r\n  console.log(video);\r\n  console.log(selectedVideo);\r\n\r\n  const imageUrl = video.snippet.thumbnails.default.url;\r\n  const title = video.snippet.title;\r\n  // const description = video.snippet.description;\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        onClick={() => {\r\n          selectedVideo(video);\r\n        }}\r\n      >\r\n        <img src={imageUrl} alt=\"Failed to fetch\" />\r\n      </div>\r\n\r\n      <div>\r\n        <div>{title}</div>\r\n        {/* <div>{description}</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps= (state) =>{\r\n//   return { }\r\n// }\r\nexport default connect(null, { selectedVideo })(VideoItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Videos } from \"../actions\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nclass VideoList extends Component {\r\n  renderVideoList = () => {\r\n    return this.props.videos.map((video) => {\r\n      return <VideoItem key={video.etag} video={video} />;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return <div>{this.renderVideoList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state.videos);\r\n  return { videos: state.videos };\r\n};\r\n\r\nexport default connect(mapStateToProps, { Videos })(VideoList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Videos, selectedVideo } from \"../actions\";\r\n\r\nfunction VideoDetails({ Video }) {\r\n  if (!Video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  //   console.log(currentVideo);\r\n  const videoId = Video.id.videoId;\r\n  const url = `https://www.youtube.com/embed/${videoId}`;\r\n\r\n  console.log(Video);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <iframe title=\"myframe\" src={url}></iframe>\r\n      </div>\r\n      <div>\r\n        <div>{Video.snippet.title}</div>\r\n        <div>{Video.snippet.description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return { Video: state.selectedVideo };\r\n};\r\n\r\nexport default connect(mapStateToProps, { Videos, selectedVideo })(\r\n  VideoDetails\r\n);\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport VideoList from \"./VideoList\";\r\nimport VideoDetails from \"./VideoDetails\";\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Search Bar  */}\r\n        <SearchBar />\r\n        <VideoDetails />\r\n        <VideoList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { videos, selectedVideo } from \"./data\";\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  videos,\r\n  selectedVideo,\r\n});\r\n","export const selectedVideo = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"SELECTED_VIDEO\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const videos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"VIDEOS_LIST\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// export default videos;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}